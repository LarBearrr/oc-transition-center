title = "job post"
url = "/jobs/post/:slug"
layout = "default"
is_hidden = 0

[blogPost]
slug = "{{ :slug }}"
categoryPage = "jobs/industry"

[blogCategories]
slug = "{{ :slug }}"
displayEmpty = 0
categoryPage = "job/industry"

[JobTracker]
jobPage = "blog/post"
==
<?php
use Wwrf\TransitionCenter\Models\AppliedJob;

function hasUserAppliedToJob($user_id, $job_id)
{
	$userAppliedJob = AppliedJob::where('user_id', '=', $user_id)
								->where('job_id','=', $job_id)
								->first();
								
	if($userAppliedJob)
		return [
			$this["hasApplied"] = true, 
			$this["appliedJob"] = $userAppliedJob
		];
}
function onEnd()
{
    $this->page->title = $this->post->title;
    
	$this->hasUserAppliedToJob($this->user->id, $this->post->id);
}
?>
==
{% set post = blogPost.post %}
{% if user.groups.first.name == 'Users' or user.groups.first.name == 'Staff' or user.id == post.author_id %}
<div class="container">

    <!-- Partial: Jobs toolbar-->
    <section class="pt-5 mt-5 pb-3">
        {% partial 'jobs/toolbar' %}
    </section>
    <!-- /Partial: Jobs toolbar -->

    <!-- Section: Job post -->
    <section class="section">

            <!-- Grid row -->
            <div class="row">

                <!-- Post column-->
                <div class="col-lg-8 col-md-12 mb-3 pb-lg-2 mx-auto">

                    <div class="mb-2 px-4 py-2 z-depth-1">
                        <h2 class="card-title font-weight-bold pt-2"><strong>{{ post.title }}</strong></h2>
                        {% if post.company %}
						<h4><i class="fa fa-building-o mr-3"></i> {% if post.website %}
                            <a href="{{post.website}}" 
                                   target="#">{{post.company}}</a>{% else %}{{post.company}}{% endif %}</h4>
                        {% endif %}
                        {% if post.address %}
						<h4 class="h4-responsive">
                            <i class="fa fa-map-marker mr-3"></i> {{post.address}}
                        </h4>
                        {% endif %}
                        {% if post.phone %}
						<h4 class="h4-responsive">
                            <i class="fa fa-phone mr-3"></i> {{post.phone}}
                        </h4>
                        {% endif %}
                        <hr />
                        <p class="">{{ post.content_html|raw }}</p>

                    </div>

                </div>
                <!-- /Post column-->

                
                <!-- Post sidebar column-->
                {% if user.groups.first.name == 'Users' and post.link or post.address %}
                <div class="col-lg-4 col-md-12 mb-4 mx-auto">

                    {% if user.groups.first.name == 'Users' and post.link %}
                        <form data-request="onApplyJob" 
                                data-request-data="job_id: {{post.id}}" 
                                data-request-flash 
                                method="post" 
                                onSubmit="window.open('{{post.link}}','_blank');">
                            <button type="sumbit" class="btn btn-block default-color-dark mb-4">Apply Online <i class="fa fa-clone"></i></button>
                        </form>
                       
                    {% endif %}

                    {% if post.address %}

                            <!--Google map-->
                            <div id="distance-output"></div>
                            <div id="job-map-container" class="z-depth-1-half job-map-container" style="height: 400px"></div>
                            <div id="job-map-directions"></div>
				  	
                    {% endif %}

                </div>
                <!-- /Post sidebar column-->
                {% endif %}
            </div>
            <!--Grid row-->

        </section>
</div>

<!--Google Maps-->
<script src="https://maps.google.com/maps/api/js?key=AIzaSyDCEEQWmjat4dZoYXpY9zBg4w3zLD91Sfo"></script>

<script>
    //Google Maps Distance API init
    function getDistance() {

        var bounds = new google.maps.LatLngBounds;

        var markersArray = [];

        var origin1 = '401 S. Emporia Wichita, KS';

        {% if record %}
            var destinationA = '{{record.address}}' + 'Wichita, KS';
        {% else %}
            var destinationA = '{{post.address}}' + 'Wichita, KS';
        {% endif %}

        var destinationIcon = 'https://chart.googleapis.com/chart?' +
            'chst=d_map_pin_letter&chld=D|FF0000|000000';
        var originIcon = 'https://chart.googleapis.com/chart?' +
            'chst=d_map_pin_letter&chld=O|FFFF00|000000';
        var map = new google.maps.Map(document.getElementById('job-map-container'), {
            center: {lat: 37.681669, lng: -97.331118},
            zoom: 10
        });
        var geocoder = new google.maps.Geocoder;

        var service = new google.maps.DistanceMatrixService;
        service.getDistanceMatrix({
            origins: [{lat:37.681975, lng: -97.333269}],
            destinations: [destinationA],
            travelMode: 'WALKING',
            unitSystem: google.maps.UnitSystem.IMPERIAL,
            avoidHighways: false,
            avoidTolls: false
        }, function(response, status) {
        if (status !== 'OK') {
            alert('Error was: ' + status);
        } else {
            var originList = response.originAddresses;
            var destinationList = response.destinationAddresses;
            var outputDiv = document.getElementById('distance-output');
            outputDiv.innerHTML = '';
            deleteMarkers(markersArray);

            var showGeocodedAddressOnMap = function(asDestination) {
                var icon = asDestination ? destinationIcon : originIcon;
                return function(results, status) {
                    if (status === 'OK') {
                    map.fitBounds(bounds.extend(results[0].geometry.location));
                    markersArray.push(new google.maps.Marker({
                        map: map,
                        position: results[0].geometry.location,
                        icon: icon
                    }));
                    } else {
                    alert('Geocode was not successful due to: ' + status);
                    }
                };
            };

            for (var i = 0; i < originList.length; i++) {
                var results = response.rows[i].elements;

                for (var j = 0; j < results.length; j++) {
                    
                    var distance = results[j].distance.value

                    if (distance > 1610) {
                        var setMode = "TRANSIT";
                    } else {
                        var setMode = "WALKING";
                    }
                    
                    var directionsService = new google.maps.DirectionsService;
                    var directionsDisplay = new google.maps.DirectionsRenderer;
                
                    directionsDisplay.setMap(map);
                    directionsDisplay.setPanel(document.getElementById('job-map-directions'));

                    directionsService.route({
                        origin: {lat:37.681975, lng: -97.333269},
                        destination: destinationA,
                        travelMode: setMode,
                        transitOptions: {
                            routingPreference: 'FEWER_TRANSFERS'
                        }
                    }, function(response, status) {
                        if (status === 'OK') {
                        	directionsDisplay.setDirections(response);
                        } else {
                        	return;
                        }
                    });
                }
            }
        }
        });

    }

    function deleteMarkers(markersArray) {
        for (var i = 0; i < markersArray.length; i++) {
            markersArray[i].setMap(null);
        }
        markersArray = [];
    }

    google.maps.event.addDomListener(window, 'load', getDistance);
</script>
{% endif %}
