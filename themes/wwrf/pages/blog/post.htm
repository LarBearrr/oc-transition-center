title = "Post"
url = "/blog/post/:slug"
layout = "default"
description = "Viewing a single blog post"
is_hidden = 0

[blogPost]
slug = "{{ :slug }}"
categoryPage = "blog/category"

[blogCategories]
slug = "{{ :slug }}"
displayEmpty = 0
categoryPage = "blog/category"

[JobTracker]
jobPage = "blog/post"
==
<?php
use Wwrf\TransitionCenter\Models\AppliedJob;

function hasUserAppliedToJob($user_id, $job_id)
{
	$userAppliedJob = AppliedJob::where('user_id', '=', $user_id)
								->where('job_id','=', $job_id)
								->first();
								
	if($userAppliedJob)
		return [
			$this["hasApplied"] = true, 
			$this["appliedJob"] = $userAppliedJob
		];
}
function onEnd()
{
    $this->page->title = $this->post->title;
    
	$this->hasUserAppliedToJob($this->user->id, $this->post->id);
}
?>
==
{% set post = blogPost.post %}
{% if user.groups[0].name == 'Users' or user.groups[0].name == 'Staff' or user.id == post.author_id %}
	{% if user.groups.first.name == 'Users' or user.groups.first.name == 'Staff' %}
		{% partial 'blog_jumbo' %}
	{% endif %}
	<div class="container"  id="jobContainer">
	    <div class="row" style="margin-top:30px;">
	        <div class="col-md-8">
	            <h2 class="media-heading">
		            {{ post.title }}
		            
	            </h2>
	            <p class="info">
	                Posted {% if post.categories.count %} in {% endif %}
	                {% for category in post.categories %}
	                    <a href="{{ category.url }}">{{ category.name }}</a>{% if not loop.last %}, {% endif %}
	                {% endfor %}
	                on <i class="icon icon-clock-o"></i>
	                {{ post.published_at|date('M d, Y') }} by <i class="icon icon-user"></i>
	                {% if post.author.company_name %} 
	                    {{ post.author.company_name }} 
	                {% elseif post.author.name %} 
	                    {{ post.author.name }} {{ post.author.surname }}
	                {% else %} 
	                    {{ post.user.first_name }} {{ post.user.last_name }}
	                {%endif%}
	            </p>
				<div class="content">
					{% if post.company %}
						<h2>{{post.company}}</h2>
					{% endif %}
					{% if post.website %}
						<h3><a href="{{post.website}}" 
						   target="#">{{post.website}}</a></h3>
					{%endif%}
					<p class="lead">
					{% if post.address %}
						<i class="icon icon-map-marker"></i> {{post.address}}
					{% endif %}
					{% if post.phone %}
						 <i class="icon icon-phone"></i> {{post.phone}}
					{% endif %}
					</p>
					{{ post.content_html|raw }}
				</div>
				{% if post.featured_images.count %}
				    <div class="featured-images text-center">
				        {% for image in post.featured_images %}
				            <p>
				                <img
				                    data-src="{{ image.filename }}"
				                    src="{{ image.path }}"
				                    alt="{{ image.description }}"
				                    style="max-width: 100%" />
				            </p>
				        {% endfor %}
				    </div>
				{% endif %}
	        </div>
	        <div class="col-md-4">
				{% if user.groups.first.name == 'Users' %}
	                {% if post.link %}
		            	<div class="row mb-4">
		            		<form data-request="onApplyJob" 
		            			  data-request-data="job_id: {{post.id}}" 
		            			  data-request-flash 
		            			  method="post" 
		            			  onSubmit="window.open('{{post.link}}','_blank');">
							    <button type="sumbit" class="btn btn-success btn-block btn-lg">Apply Online <i class="icon icon-external-link"></i></button>
							</form>
						</div>
					{% endif %}
					
				{% endif %}
				{% if post.address %}
					<!--<div class="row">
						<iframe src="//www.google.com/maps/embed/v1/place?q={{post.address}}
					      &zoom=13
					      &attribution_source=Google+Maps+Embed+API
					      &attribution_web_url=https://developers.google.com/maps/documentation/embed/
					      &key=AIzaSyBb5AkQHSFXfIqxr2BoxQt5zQmcMqd3HmE"
					      width="100%"
					      height="500"
					      frameborder="0" style="border:0"
					      allowfullscreen>
					  	</iframe>
					</div>-->
			  		<div class="row">
						<!--Google map-->
	                    <div id="distance-output"></div>
	                    <div id="job-map-container" class="z-depth-1-half job-map-container" style="height: 400px"></div>
	                    <div id="job-map-directions"></div>
					</div>
				  	
			  	{% endif %}
	        </div>
	    </div>
	</div>
{% else %}
	<div class="container">
	<div class="col-md-8 blog-main">
		<h3 class="pb-3 mb-4 font-italic border-bottom">
		Work Release News
		</h3>
		
		<div class="blog-post">
	        <h2 class="blog-post-title"><a href="{{ post.url }}">{{ post.title }}</a></h2>
	        <p class="blog-post-meta info">Posted
			                {% if post.categories.count %} in {% endif %}
			                {% for category in post.categories %}
			                    <a href="{{ category.url }}">{{ category.name }}</a>{% if not loop.last %}, {% endif %}
			                {% endfor %}
			                on {{ post.published_at|date('M d, Y') }}</p>
	
	        <p class="excerpt">{{ post.content|raw }}</p>
	      </div><!-- /.blog-post -->
	
	</div><!-- /.blog-main -->
	
	<aside class="col-md-4 blog-sidebar">
	  <div class="p-3 mb-3 bg-light rounded">
	    <h4 class="font-italic">Quicklinks</h4>
	    <ol class="list-unstyled">
	      <li><a href="#">Work Opportunity Tax Credit</a></li>
	      <li><a href="#">Federal Bonding Program</a></li>
	      <li><a href="#">Workforce Innovation Fund</a></li>
	    </ol>
	  </div>
	
	  <div class="p-3">
	    <h4 class="font-italic">Elsewhere</h4>
	    <ol class="list-unstyled">
	      <li><a href="#">Facebook</a></li>
	      <li><a href="#">Workforce Centers</a></li>
	      <li><a href="#">Kansas Department of Corrections</a></li>
	    </ol>
	  </div>
	</aside><!-- /.blog-sidebar -->
	</div>
{% endif %}
<script src="https://maps.google.com/maps/api/js?key=AIzaSyDCEEQWmjat4dZoYXpY9zBg4w3zLD91Sfo"></script>
<script>
    //Google Maps Distance API init
    function getDistance() {

        var bounds = new google.maps.LatLngBounds;

        var markersArray = [];

        var origin1 = '401 S. Emporia Wichita, KS';

        {% if record %}
            var destinationA = '{{record.address}}' + 'Wichita, KS';
        {% else %}
            var destinationA = '{{post.address}}' + 'Wichita, KS';
        {% endif %}

        var destinationIcon = 'https://chart.googleapis.com/chart?' +
            'chst=d_map_pin_letter&chld=D|FF0000|000000';
        var originIcon = 'https://chart.googleapis.com/chart?' +
            'chst=d_map_pin_letter&chld=O|FFFF00|000000';
        var map = new google.maps.Map(document.getElementById('job-map-container'), {
            center: {lat: 37.681669, lng: -97.331118},
            zoom: 10
        });
        var geocoder = new google.maps.Geocoder;

        var service = new google.maps.DistanceMatrixService;
        service.getDistanceMatrix({
            origins: [{lat:37.681975, lng: -97.333269}],
            destinations: [destinationA],
            travelMode: 'WALKING',
            unitSystem: google.maps.UnitSystem.IMPERIAL,
            avoidHighways: false,
            avoidTolls: false
        }, function(response, status) {
        if (status !== 'OK') {
            alert('Error was: ' + status);
        } else {
            var originList = response.originAddresses;
            var destinationList = response.destinationAddresses;
            var outputDiv = document.getElementById('distance-output');
            outputDiv.innerHTML = '';
            deleteMarkers(markersArray);

            var showGeocodedAddressOnMap = function(asDestination) {
                var icon = asDestination ? destinationIcon : originIcon;
                return function(results, status) {
                    if (status === 'OK') {
                    map.fitBounds(bounds.extend(results[0].geometry.location));
                    markersArray.push(new google.maps.Marker({
                        map: map,
                        position: results[0].geometry.location,
                        icon: icon
                    }));
                    } else {
                    alert('Geocode was not successful due to: ' + status);
                    }
                };
            };

            for (var i = 0; i < originList.length; i++) {
                var results = response.rows[i].elements;

                for (var j = 0; j < results.length; j++) {
                    
                    var distance = results[j].distance.value

                    if (distance > 1610) {
                        var setMode = "TRANSIT";
                    } else {
                        var setMode = "WALKING";
                    }
                    
                    var directionsService = new google.maps.DirectionsService;
                    var directionsDisplay = new google.maps.DirectionsRenderer;
                
                    directionsDisplay.setMap(map);
                    directionsDisplay.setPanel(document.getElementById('job-map-directions'));

                    directionsService.route({
                        origin: {lat:37.681975, lng: -97.333269},
                        destination: destinationA,
                        travelMode: setMode,
                        transitOptions: {
                            routingPreference: 'FEWER_TRANSFERS'
                        }
                    }, function(response, status) {
                        if (status === 'OK') {
                        	directionsDisplay.setDirections(response);
                        } else {
                        	return;
                        }
                    });
                }
            }
        }
        });

    }

    function deleteMarkers(markersArray) {
        for (var i = 0; i < markersArray.length; i++) {
            markersArray[i].setMap(null);
        }
        markersArray = [];
    }

    google.maps.event.addDomListener(window, 'load', getDistance);
</script>